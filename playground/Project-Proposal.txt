CS 5520 Project Proposal
Team Members: Carlos Semeho Edorh & Yiyang Wang
App Name: Local Buzz
App Description
Stay instantly informed about what's happening right around you with Local Buzz! This
hyperlocal community bulletin board app connects you with real-time events and incidents in
your neighborhood. From traffic snarls and road closures to local festivals and community
gatherings, Local Buzz keeps you in the loop. Share updates, photos, and alerts with your
neighbors, fostering a stronger, more informed community. Our AI-powered categorization
ensures you see the most relevant information quickly, and customizable notifications keep you
informed without overwhelming you. Experience the power of real-time local connection –
download Local Buzz today!
Slogan
Stay tuned with Local Buzz!
Target Users
Adults aged 18-55 who are actively involved in their local community and rely on real-time
information for daily planning and safety. This includes residents, commuters, and parents who
want to stay informed about events, traffic, and potential disruptions in their immediate area.
Problem/Task/Need
Local Buzz addresses the need for real-time, hyperlocal information sharing. Users often struggle
to find timely updates about events, traffic, or incidents affecting their immediate area. Social
media platforms are too broad, and official channels can be slow. Local Buzz fills this gap.
Competitors
 Nextdoor: Focuses on neighborhood communication but can be cluttered and less realtime focused.
 Citizen: Emphasizes safety-related incidents but lacks community event features.
 Waze (for traffic): Primarily for navigation, not general local information.
Why Local Buzz is Better/Different
Local Buzz combines the community focus of Nextdoor with the real-time urgency of Citizen,
adding AI-powered content classification and a dedicated focus on hyperlocal events and
incidents. Unlike Waze, it's not just about traffic; it's about the broader neighborhood
experience.
Competitor Review Themes
Common complaints about competitors include: too much noise/irrelevant information, lack of
real-time updates, poor UI/UX, and privacy concerns. Local Buzz will address these by focusing
on relevant content, continuous stream of real-time, relevant updates, and a clean UI.
Innovation/Elegance
The AI-powered content classification is a key differentiator, ensuring users quickly see the most
relevant posts. The elegant combination of a real-time feed with an interactive map provides a
dynamic and intuitive user experience.
Long-Term Engagement
By providing consistently valuable and timely information, Local Buzz becomes an essential tool
for staying connected to the local community. The dynamic nature of real-time updates and the
ability to contribute to the community will foster continued engagement.
Potential Weaknesses and Mitigation
 Weakness: Maintaining a critical mass of users in each area is crucial.
o Mitigation: Targeted marketing and community outreach to build an initial user
base.
 Weakness: Ensuring the accuracy and reliability of user-generated content.
o Mitigation: Implement a reporting system for inaccurate or inappropriate posts,
potentially with community moderation features.
 Weakness: Potential for misuse (e.g., spreading misinformation).
o Mitigation: Clear community guidelines, content moderation, and potentially factchecking partnerships.
Third-Party APIs
1. Google Cloud Natural Language API: For AI-powered content classification and sentiment
analysis
2. OpenWeatherMap API: For providing localized weather context within posts
Camera and Location Usage
Local Buzz uses the device's camera for users to capture and share photos of events or incidents.
User location is used to display nearby posts on the map (with multiple markers) and to provide
location-based notifications. Users can control location sharing preferences.
Firestore Database Structure
Top-level Collections:
1. Users: Stores user profile information, account settings, and authentication details.
o Structure:
o users/{userId}
o - username: string
o - email: string
o - photoURL: string (optional)
o - createdAt: timestamp
o - lastLogin: timestamp
o - notificationPreferences: object (category filters, radius, etc.)
2. Posts: Contains all posts shared in the app.
o Structure:
o posts/{postId}
o - title: string
o - content: string
o - photoURL: string (optional)
o - location: geopoint
o - category: string
o - createdAt: timestamp
o - authorId: string (reference to users collection)
o - likes: number
Sub-collections:
1. Notifications: Sub-collection under Users.
o Structure:
o users/{userId}/notifications/{notificationId}
o - type: string
o - content: string
o - relatedPostId: string (optional)
o - location: geopoint (optional)
o - scheduledFor: timestamp
o - createdAt: timestamp
o - isRead: boolean
CRUD Operations
 Create: Users create posts, which are added to the Posts collection. Users schedule local
notifications.
 Read: The app reads data from all three collections to display posts, user profiles, and
notifications.
 Update: Users can update their profile information and notification preferences. Users
can edit their own posts within a time limit.
 Delete: Users can delete their own posts and notifications. Administrators have broader
deletion rights.
Scheduled Notifications
Users can schedule notifications for specific locations (e.g., their home or work area) and
categories (e.g., traffic alerts, community events). This allows them to receive reminders or alerts
about relevant happenings in those areas, similar to setting an alarm for local news. This is
distinct from real-time notifications about new posts.
User Interface Improvements
Based on feedback, we have made the following improvements to the UI:
1. More Descriptive Navigation: Changed the left tab from "POST" to "CREATE POST" for
clarity.
2. Distinct Action Buttons: The POST and CANCEL buttons on the Create Post screen are now
styled differently from the navigation tabs (rounded, filled buttons positioned higher in
the layout).
3. Added Screens:
o User Profile Screen: Shows user information, settings, and notification
preferences
o Notification Scheduling Screen: Allows users to set up location-based alerts
4. Navigation Flow:
o Profile is accessible from the persistent icon in the header
o Notification scheduling is accessible from both the profile screen and via a
shortcut in the main feed
o Settings are accessible from the profile screen
Crash on Metro Vancouver Bridge
……………………………………………………
Local Buzz
Violent attack
2hr waiting at Andonis
……………………………………………………
Light rain for 120 mins 4 C – 3C
CREATE POST VIEW MAP
Local Buzz
Light rain for 120 mins 4 C – 3C
CREATE POST VIEW MAP
TITLE
Local Buzz
TEXT
Light rain for 120 mins 4 C – 3C
CREATE POST VIEW MAP
Local Buzz Local Buzz Local Buzz
ADD PHOTO
Schedule Notification
Location Select
Categories Select
SAVE CANCEL
 john.doe@example.com
John Doe
Account Settings >
Notification Settings >
Sign Out
 POST CANCEL
Main Feed Map View Create Post
Profile NotificationSc
heduling
Settings
Tab Navigation
Header Navigation
Main Feed Screen Map View Screen Create Post Screen
Notification Scheduling User Profile Navigation Flow
Schedule Notification Your Profile